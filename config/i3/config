# vim: fdm=marker

# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete # this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                   Start-Up
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# # make screen more reddish at night
# exec redshift -l 49:6 -t 6000:2500

# # random wallpaper when starting i3 and start compositor for transparent
# # terminal background
# exec wal -qi ~/Pictures/i3wallpapers/active \
#         --backend haishoku \
#         --saturate 0.5;\
# exec picom

# random wallpaper when starting i3
# exec feh --randomize --bg-fill ~/Pictures/i3wallpapers/active/

exec initscreen.sh

# start network manager
exec --no-startup-id nm-applet

# start dunst notification daemon
exec --nos-startup-id dunst

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                         Commands for specific windows
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {{{
#
# Use the following to figure out the criterias {{{
# 
#   1) xprop | grep WM_CLASS                returns: (instance, class)
#   2) xprop | grep WM_WINDOW_ROLE          returns: window_role
#   3) xprop | grep _NET_WM_WINDOW_TYPE     returns: window_type (only take last part)
#   4) xprop | grep _NET_WM_NAME            returns: title
#   5) xprop | grep WM_NAME                 returns: title (as fallback for the above)
# }}}

# Floating windows -------------------------------------------------------------
# Open a floating window
for_window [instance="floating_terminal"] floating enable
for_window [instance="floaty"] floating enable
for_window [class="floaty"] floating enable
for_window [class="floating_window"] floating enable

# Make flowblade's render window float
for_window [class="Flowbladesinglerender"] floating enable

# Thunderbird
for_window [class="Thunderbird" window_role="messageWindow"] floating enable
for_window [class="Thunderbird" window_role="Msgcompose"] floating enable

# Firefox
for_window [class="firefox" instance="Places"] floating enable

# cool-retro-term
for_window [class="Cool-Retro-Term-1.1.1-x86_64.AppImage" title="Settings"] floating enable

# Make Matlab windows float
for_window [class="MATLAB R2019b - academic use" title="Preferences"] floating enable
for_window [class="MATLAB R2019b - academic use" instance="sun-awt-X11-XFramePeer"] floating enable

# Marking windows -------------------------------------------------------------- 
for_window [class="discord"] mark d
for_window [class="frescobaldi"] mark f
for_window [class="Anydesk"] mark a

# }}}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                   Variables
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {{{
set $mod Mod4

set $left  h
set $down  j
set $up    k
set $right l

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1  "1"
set $ws2  "2"
set $ws3  "3"
set $ws4  "4"
set $ws5  "5"
set $ws6  "6"
set $ws7  "7"
set $ws8  "8"
set $ws9  "9"
set $ws10 "10"


# }}}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                   Settings
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {{{


# Workspaces -------------------------------------------------------------------
# Orientation for new workspaces
default_orientation auto

# Automatically putting workspaces on specific screens
# workspace 5 output HDMI1

# Automatic back-and-forth when switching to the current workspace
workspace_auto_back_and_forth yes

# Marks ------------------------------------------------------------------------
show_marks yes
# read 1 character and mark the current window with this character
bindsym $mod+shift+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '
# read 1 character and go to the window with the character
bindsym $mod+m exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '


# Fonts ------------------------------------------------------------------------
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.


# Floating windows -------------------------------------------------------------
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# }}}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                  Appearance
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {{{

# Gaps -------------------------------------------------------------------------
gaps inner 10
smart_gaps on

# Window borders ---------------------------------------------------------------
default_border pixel 2

# Colors -----------------------------------------------------------------------
# class         border   backgr.  text     indicator  child_border
client.focused  #e68a00  #e68a00  #ffffff  #ffbe8c    #e68a00

# }}}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                   Bindings
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {{{

# start a terminal
bindsym $mod+Return       exec i3-sensible-terminal
bindsym $mod+Shift+Return exec i3-sensible-terminal --class 'floating_terminal'
# launch terminal with nvim GhostText
bindsym $mod+g       exec i3-sensible-terminal --command nvim +GhostStart
bindsym $mod+Shift+g exec i3-sensible-terminal --class 'floaty' --command nvim +GhostStart

# kill focused window
bindsym $mod+Shift+q kill

# the scratchpad
bindsym $mod+shift+s scratchpad show
bindsym $mod+ctrl+s move scratchpad

# start dmenu (a program launcher)
bindsym $mod+d       exec dmenu_run
bindsym $mod+shift+d exec --no-startup-id i3-dmenu-desktop
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.

# change focus
bindsym $mod+$left  focus left
bindsym $mod+$down  focus down
bindsym $mod+$up    focus up
bindsym $mod+$right focus right

# change focus (with arrow keys)
bindsym $mod+Left   focus left
bindsym $mod+Down   focus down
bindsym $mod+Up     focus up
bindsym $mod+Right  focus right

# move focused window
bindsym $mod+Shift+$left    move left
bindsym $mod+Shift+$down    move down
bindsym $mod+Shift+$up      move up
bindsym $mod+Shift+$right   move right

# move focused window (with arrow keys)
bindsym $mod+Shift+Left     move left
bindsym $mod+Shift+Down     move down
bindsym $mod+Shift+Up       move up
bindsym $mod+Shift+Right    move right

# Pressing left will shrink the window’s width.
# Pressing right will grow the window’s width.
# Pressing up will shrink the window’s height.
# Pressing down will grow the window’s height.
bindsym $mod+control+$left   resize shrink width     50 px or 1 ppt
bindsym $mod+control+$down   resize shrink height    50 px or 1 ppt
bindsym $mod+control+$up     resize grow height      50 px or 1 ppt
bindsym $mod+control+$right  resize grow width       50 px or 1 ppt

# split in horizontal orientation
bindsym $mod+c split h
# split in vertical orientation
bindsym $mod+v split v
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+f                floating toggle
# bindsym --whole-window $mod+button3 floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning \
    -m 'You pressed the exit shortcut. Do you really want to exit i3? \
        This will end your X session.' \
    -B 'Yes, exit i3' 'i3-msg exit' \
    "

# reload a new background
bindsym $mod+Mod1+r exec initscreen.sh
                
# edit config files
bindsym $mod+ctrl+c exec edit_configs.sh

# edit clipboard
bindsym $mod+Mod1+c exec cedit

# toggle dunst notifications
bindsym $mod+F1         exec dunst-toggle.sh
bindsym $mod+F2         exec dunstctl history-pop
bindsym $mod+F3         exec dunstctl close
bindsym $mod+shift+F3   exec dunstctl close-all

# }}}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                     Modes
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# {{{ notify-send test

# various operations on screen
bindsym $mod+x mode "window-ops"
mode "window-ops" { #{{{ notify-send test
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym $left   resize shrink width     50 px or 1 ppt
    bindsym $up     resize grow height      50 px or 1 ppt
    bindsym $down   resize shrink height    50 px or 1 ppt
    bindsym $right  resize grow width       50 px or 1 ppt

    # Move the window
    bindsym $mod+$left      move left   50px
    bindsym $mod+$down      move down   50px
    bindsym $mod+$up        move up     50px
    bindsym $mod+$right     move right  50px

    # make floating
    bindsym f floating toggle

    # take a screenshot
    bindsym --release $mod+s mode "default"; exec --no-startup-id "screenshot.sh"
    bindsym --release $mod+w mode "default"; exec --no-startup-id "screenshot.sh window"
    bindsym --release $mod+f mode "default"; exec --no-startup-id "screenshot.sh full"
    bindsym --release $mod+v mode "default"; exec --no-startup-id "screenshot.sh view"
    bindsym --release $mod+e mode "default"; exec --no-startup-id "screenshot.sh view"
    bindsym --release $mod+r mode "default"; exec --no-startup-id "screenshot.sh resize"

    # back to normal
    bindsym Return  mode "default"
    bindsym Escape  mode "default"
} #}}}

bindsym $mod+o mode "system-ops"
mode "system-ops" { #{{{
    # screen brightness
    bindsym 1 exec --no-startup-id  xbacklight -set  10
    bindsym 2 exec --no-startup-id  xbacklight -set  20
    bindsym 3 exec --no-startup-id  xbacklight -set  30
    bindsym 4 exec --no-startup-id  xbacklight -set  40
    bindsym 5 exec --no-startup-id  xbacklight -set  50
    bindsym 6 exec --no-startup-id  xbacklight -set  60
    bindsym 7 exec --no-startup-id  xbacklight -set  70
    bindsym 8 exec --no-startup-id  xbacklight -set  80
    bindsym 9 exec --no-startup-id  xbacklight -set  90
    bindsym 0 exec --no-startup-id  xbacklight -set 100

    # system volume
    bindsym $mod+$up    exec --no-startup-id     amixer -qD pulse sset Master   1%+
    bindsym $mod+$down  exec --no-startup-id     amixer -qD pulse sset Master   1%-
    bindsym $mod+1      exec --no-startup-id     amixer -qD pulse sset Master  10%
    bindsym $mod+2      exec --no-startup-id     amixer -qD pulse sset Master  20%
    bindsym $mod+3      exec --no-startup-id     amixer -qD pulse sset Master  30%
    bindsym $mod+4      exec --no-startup-id     amixer -qD pulse sset Master  40%
    bindsym $mod+5      exec --no-startup-id     amixer -qD pulse sset Master  50%
    bindsym $mod+6      exec --no-startup-id     amixer -qD pulse sset Master  60%
    bindsym $mod+7      exec --no-startup-id     amixer -qD pulse sset Master  70%
    bindsym $mod+8      exec --no-startup-id     amixer -qD pulse sset Master  80%
    bindsym $mod+9      exec --no-startup-id     amixer -qD pulse sset Master  90%
    bindsym $mod+0      exec --no-startup-id     amixer -qD pulse sset Master 100%
    bindsym $mod+m      exec --no-startup-id     amixer -qD pulse sset Master mute
    bindsym m           exec --no-startup-id     amixer -qD pulse sset Master unmute
    bindsym t           exec --no-startup-id     amixer -qD pulse sset Master toggle

    # show system info
    bindsym --release i mode "default"; exec --no-startup-id sysinfo.sh
    # bindsym --release i exec --no-startup-id notify-send \
    #     --icon="/usr/share/icons/Adwaita/32x32/devices/computer-symbolic.symbolic.png"\
    #     "System Information"\
    #     "$(printf "%s\n%s\n%s" \
    #         "$(echo "Brightness:\t\t$(xbacklight -get || echo ??)")" \
    #         "$(acpi --battery | sed 's#^\(.*:\)\s*#\1\t\t#')" \
    #         "$(amixer -D pulse sget Master | awk -F " " '$6 == "[on]" || $6 == "[off]" {print "Volume " $1 " " $2 "\t" $5 " " $6}')" \
    #     )"

    # poweroff, reboot, suspend. hibernate machine
    bindsym control+p exec systemctl poweroff
    bindsym control+r exec systemctl reboot
    # bindsym control+s mode "default"; exec /opt/i3lockmore/i3lockmore --image-fill "/home/kuni/Pictures/i3wallpapers/lockscreen/ludens-1576411224708-9031.jpg" && systemctl suspend
    # bindsym control+s mode "default"; exec i3lock -c $(head -n1 ~/.cache/wal/colors) && systemctl suspend
    bindsym control+s mode "default"; exec i3lock -i ~/Pictures/i3wallpapers/lockscreen/lastofusgiraffe.png && systemctl suspend
    bindsym control+h mode "default"; exec i3lock && systemctl hibernate
    bindsym control+F12 exec "i3-nagbar -t warning \
        -m 'Power off machine?' \
        -B 'Poweroff'   'systemctl poweroff' \
        -B 'Reboot'     'systemctl reboot' \
        -B 'Suspend'    'i3-msg mode "default"; i3lock && systemctl suspend' \
        -B 'Hibernate'  'i3-msg mode "default"; i3lock && systemctl hibernate' \
        "

    # back to normal
    bindsym Return  mode "default"
    bindsym Escape  mode "default"
} #}}}

bindsym $mod+p mode "programs"
mode "programs" { #{{{
    bindsym f exec firefox
    bindsym t exec thunderbird
    bindsym d exec discord 
    bindsym z exec zathura 
    
    # back to normal
    bindsym Return  mode "default"
    bindsym Escape  mode "default"
} #}}}

# }}}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                                  Status Bar
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
# Display mode -----------------------------------------------------------------
    mode dock
    # modifier $mod

    position bottom


    workspace_buttons yes

    binding_mode_indicator yes

    status_command i3status
    # i3bar_command i3bar --transparency

    colors {
        background #000000AB
    }
}
